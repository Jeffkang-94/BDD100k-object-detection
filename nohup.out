usage: launch.py [-h] [--nnodes NNODES] [--node_rank NODE_RANK]
                 [--nproc_per_node NPROC_PER_NODE] [--master_addr MASTER_ADDR]
                 [--master_port MASTER_PORT] [--use_env] [-m] [--no_python]
                 training_script ...
launch.py: error: argument --nproc_per_node: invalid int value: ''
usage: launch.py [-h] [--nnodes NNODES] [--node_rank NODE_RANK]
                 [--nproc_per_node NPROC_PER_NODE] [--master_addr MASTER_ADDR]
                 [--master_port MASTER_PORT] [--use_env] [-m] [--no_python]
                 training_script ...
launch.py: error: argument --nproc_per_node: invalid int value: 'configs/faster_rcnn/faster_rcnn_r50_fpn_1x_bdd.py'
2021-06-21 18:57:49,683 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.13 |Anaconda, Inc.| (default, Feb 23 2021, 21:15:04) [GCC 7.3.0]
CUDA available: True
GPU 0,1: TITAN RTX
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.2.r11.2/compiler.29618528_0
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 9.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.2.1
OpenCV: 4.5.1
MMCV: 1.2.7
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.10.0+79c8dd5
------------------------------------------------------------

2021-06-21 18:57:50,300 - mmdet - INFO - Distributed training: True
2021-06-21 18:57:50,891 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=10,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'Bdd100kDataset'
classes = {
    'bike', 'rider', 'motor', 'truck', 'car', 'traffic light', 'traffic sign',
    'person', 'bus', 'train'
}
data_root = '/mnt2/datasets/bdd100k/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1280, 720), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1280, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='Bdd100kDataset',
        ann_file=
        '/mnt2/datasets/bdd100k/labels_coco/bdd100k_labels_images_train_coco.json',
        img_prefix='/mnt2/datasets/bdd100k/images/100k/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1280, 720), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    test=dict(
        type='Bdd100kDataset',
        ann_file=
        '/mnt2/datasets/bdd100k/labels_coco/bdd100k_labels_images_val_coco.json',
        img_prefix='/mnt2/datasets/bdd100k/images/100k/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1280, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(
    interval=1000,
    metric='mAP',
    iou_thr=[
        0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.8500000000000001, 0.9, 0.95
    ])
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1000)
log_config = dict(interval=1000, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
batch_size = 64
work_dir = './work_dirs/faster_rcnn_r50_fpn_1x_bdd'
gpu_ids = range(0, 2)

2021-06-21 18:57:51,131 - mmdet - INFO - load model from: torchvision://resnet50
2021-06-21 18:57:51,131 - mmdet - INFO - Use load_from_torchvision loader
2021-06-21 18:57:52,809 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

loading annotations into memory...
loading annotations into memory...
Done (t=7.03s)
creating index...
Done (t=7.12s)
creating index...
index created!
index created!
/mnt2/workspace/mmdetection/mmdet/datasets/bdd100k.py:174: UserWarning: CustomDataset does not support filtering empty gt images.
  'CustomDataset does not support filtering empty gt images.')
/mnt2/workspace/mmdetection/mmdet/datasets/bdd100k.py:174: UserWarning: CustomDataset does not support filtering empty gt images.
  'CustomDataset does not support filtering empty gt images.')
Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 182, in main
    meta=meta)
  File "/mnt2/workspace/mmdetection/mmdet/apis/train.py", line 135, in train_detector
    val_samples_per_gpu = cfg.data.val.pop('samples_per_gpu', 1)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 43, in __getattr__
    raise ex
AttributeError: 'ConfigDict' object has no attribute 'val'
Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 182, in main
    meta=meta)
  File "/mnt2/workspace/mmdetection/mmdet/apis/train.py", line 135, in train_detector
    val_samples_per_gpu = cfg.data.val.pop('samples_per_gpu', 1)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 43, in __getattr__
    raise ex
AttributeError: 'ConfigDict' object has no attribute 'val'
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 263, in <module>
    main()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 259, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/home/jeffkang/anaconda3/envs/fastrcnn/bin/python', '-u', 'tools/train.py', '--local_rank=1', 'configs/faster_rcnn/faster_rcnn_r50_fpn_1x_bdd.py', '--launcher', 'pytorch']' returned non-zero exit status 1.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 95, in _validate_py_syntax
    ast.parse(content)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 40
    pipeline=train_pipeline),
           ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 89, in main
    cfg = Config.fromfile(args.config)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 251, in fromfile
    use_predefined_variables)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 173, in _file2dict
    _cfg_dict, _cfg_text = Config._file2dict(osp.join(cfg_dir, f))
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 144, in _file2dict
    Config._validate_py_syntax(filename)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 97, in _validate_py_syntax
    raise SyntaxError('There are syntax errors in config '
SyntaxError: There are syntax errors in config file /mnt2/workspace/mmdetection/configs/_base_/datasets/bdd_detection.py: invalid syntax (<unknown>, line 40)
Exception ignored in: <bound method _TemporaryFileCloser.__del__ of <tempfile._TemporaryFileCloser object at 0x7f1660fa80b8>>
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 452, in __del__
    self.close()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 448, in close
    unlink(self.name)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmptjhpicd1/tmpxc86r1i0.py'
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 95, in _validate_py_syntax
    ast.parse(content)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 40
    pipeline=train_pipeline),
           ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 89, in main
    cfg = Config.fromfile(args.config)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 251, in fromfile
    use_predefined_variables)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 173, in _file2dict
    _cfg_dict, _cfg_text = Config._file2dict(osp.join(cfg_dir, f))
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 144, in _file2dict
    Config._validate_py_syntax(filename)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 97, in _validate_py_syntax
    raise SyntaxError('There are syntax errors in config '
SyntaxError: There are syntax errors in config file /mnt2/workspace/mmdetection/configs/_base_/datasets/bdd_detection.py: invalid syntax (<unknown>, line 40)
Exception ignored in: <bound method _TemporaryFileCloser.__del__ of <tempfile._TemporaryFileCloser object at 0x7fc307b0a0b8>>
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 452, in __del__
    self.close()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 448, in close
    unlink(self.name)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpf3o38x5t/tmpj7q362e5.py'
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 263, in <module>
    main()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 259, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/home/jeffkang/anaconda3/envs/fastrcnn/bin/python', '-u', 'tools/train.py', '--local_rank=1', 'configs/faster_rcnn/faster_rcnn_r50_fpn_1x_bdd.py', '--launcher', 'pytorch']' returned non-zero exit status 1.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 95, in _validate_py_syntax
    ast.parse(content)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 40
    pipeline=train_pipeline),
           ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 89, in main
    cfg = Config.fromfile(args.config)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 251, in fromfile
    use_predefined_variables)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 173, in _file2dict
    _cfg_dict, _cfg_text = Config._file2dict(osp.join(cfg_dir, f))
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 144, in _file2dict
    Config._validate_py_syntax(filename)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 97, in _validate_py_syntax
    raise SyntaxError('There are syntax errors in config '
SyntaxError: There are syntax errors in config file /mnt2/workspace/mmdetection/configs/_base_/datasets/bdd_detection.py: invalid syntax (<unknown>, line 40)
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 95, in _validate_py_syntax
    ast.parse(content)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/ast.py", line 35, in parse
    return compile(source, filename, mode, PyCF_ONLY_AST)
  File "<unknown>", line 40
    pipeline=train_pipeline),
           ^
SyntaxError: invalid syntax

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tools/train.py", line 186, in <module>
    main()
  File "tools/train.py", line 89, in main
    cfg = Config.fromfile(args.config)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 251, in fromfile
    use_predefined_variables)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 173, in _file2dict
    _cfg_dict, _cfg_text = Config._file2dict(osp.join(cfg_dir, f))
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 144, in _file2dict
    Config._validate_py_syntax(filename)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/mmcv/utils/config.py", line 97, in _validate_py_syntax
    raise SyntaxError('There are syntax errors in config '
SyntaxError: There are syntax errors in config file /mnt2/workspace/mmdetection/configs/_base_/datasets/bdd_detection.py: invalid syntax (<unknown>, line 40)
Exception ignored in: <bound method _TemporaryFileCloser.__del__ of <tempfile._TemporaryFileCloser object at 0x7f7d8946e0f0>>
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 452, in __del__
    self.close()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 448, in close
    unlink(self.name)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpk3xh3e7u/tmp5hcswlqr.py'
Exception ignored in: <bound method _TemporaryFileCloser.__del__ of <tempfile._TemporaryFileCloser object at 0x7f23e69b60f0>>
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 452, in __del__
    self.close()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/tempfile.py", line 448, in close
    unlink(self.name)
FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpvt0ysv1o/tmpsnngqjfh.py'
Traceback (most recent call last):
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 263, in <module>
    main()
  File "/home/jeffkang/anaconda3/envs/fastrcnn/lib/python3.6/site-packages/torch/distributed/launch.py", line 259, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/home/jeffkang/anaconda3/envs/fastrcnn/bin/python', '-u', 'tools/train.py', '--local_rank=1', 'configs/faster_rcnn/faster_rcnn_r50_fpn_1x_bdd.py', '--launcher', 'pytorch']' returned non-zero exit status 1.
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
2021-06-21 19:13:15,961 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.13 |Anaconda, Inc.| (default, Feb 23 2021, 21:15:04) [GCC 7.3.0]
CUDA available: True
GPU 0,1: TITAN RTX
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.2.r11.2/compiler.29618528_0
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.4.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - Intel(R) Math Kernel Library Version 2019.0.4 Product Build 20190411 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CUDA Runtime 9.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.1
  - Build settings: BLAS=MKL, BUILD_NAMEDTENSOR=OFF, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Wno-stringop-overflow, DISABLE_NUMA=1, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.2.1
OpenCV: 4.5.1
MMCV: 1.2.7
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.10.0+79c8dd5
------------------------------------------------------------

2021-06-21 19:13:16,581 - mmdet - INFO - Distributed training: True
2021-06-21 19:13:17,182 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    pretrained='torchvision://resnet50',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=10,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'Bdd100kDataset'
classes = {
    'car', 'truck', 'traffic light', 'bike', 'motor', 'rider', 'traffic sign',
    'train', 'person', 'bus'
}
data_root = '/mnt2/datasets/bdd100k/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1280, 720), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1280, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='Bdd100kDataset',
        ann_file=
        '/mnt2/datasets/bdd100k/labels_coco/bdd100k_labels_images_daytime_train_coco.json',
        img_prefix='/mnt2/datasets/bdd100k/images/100k/train/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1280, 720), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='Bdd100kDataset',
        ann_file=
        '/mnt2/datasets/bdd100k/labels_coco/bdd100k_labels_images_daytime_val_coco.json',
        img_prefix='/mnt2/datasets/bdd100k/images/100k/val/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1280, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1000, metric='mAP')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1000)
log_config = dict(interval=1000, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
batch_size = 64
work_dir = './work_dirs/faster_rcnn_r50_fpn_1x_bdd'
gpu_ids = range(0, 2)

2021-06-21 19:13:17,401 - mmdet - INFO - load model from: torchvision://resnet50
2021-06-21 19:13:17,401 - mmdet - INFO - Use load_from_torchvision loader
2021-06-21 19:13:19,063 - mmdet - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

loading annotations into memory...
loading annotations into memory...
Done (t=4.06s)
creating index...
Done (t=4.03s)
creating index...
index created!
index created!
/mnt2/workspace/mmdetection/mmdet/datasets/bdd100k.py:174: UserWarning: CustomDataset does not support filtering empty gt images.
  'CustomDataset does not support filtering empty gt images.')
/mnt2/workspace/mmdetection/mmdet/datasets/bdd100k.py:174: UserWarning: CustomDataset does not support filtering empty gt images.
  'CustomDataset does not support filtering empty gt images.')
loading annotations into memory...
loading annotations into memory...
Done (t=1.08s)
creating index...
index created!
2021-06-21 19:13:25,071 - mmdet - INFO - Start running, host: jeffkang@jeff-xerver, work_dir: /mnt2/workspace/mmdetection/work_dirs/faster_rcnn_r50_fpn_1x_bdd
2021-06-21 19:13:25,072 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
Done (t=1.06s)
creating index...
index created!
2021-06-21 19:17:25,474 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:17:25,475 - mmdet - INFO - Epoch [1][1000/9182]	lr: 2.000e-02, eta: 7:17:22, time: 0.240, data_time: 0.018, memory: 3540, loss_rpn_cls: 0.1471, loss_rpn_bbox: 0.1325, loss_cls: 0.4315, acc: 85.6009, loss_bbox: 0.5015, loss: 1.2126
2021-06-21 19:21:26,709 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:21:26,709 - mmdet - INFO - Epoch [1][2000/9182]	lr: 2.000e-02, eta: 7:14:09, time: 0.241, data_time: 0.005, memory: 3540, loss_rpn_cls: 0.0711, loss_rpn_bbox: 0.1055, loss_cls: 0.3691, acc: 86.5424, loss_bbox: 0.5045, loss: 1.0502
2021-06-21 19:25:26,742 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:25:26,743 - mmdet - INFO - Epoch [1][3000/9182]	lr: 2.000e-02, eta: 7:09:41, time: 0.240, data_time: 0.005, memory: 3540, loss_rpn_cls: 0.0627, loss_rpn_bbox: 0.1004, loss_cls: 0.3466, acc: 87.3078, loss_bbox: 0.4793, loss: 0.9890
2021-06-21 19:29:26,163 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:29:26,164 - mmdet - INFO - Epoch [1][4000/9182]	lr: 2.000e-02, eta: 7:05:11, time: 0.239, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0574, loss_rpn_bbox: 0.0966, loss_cls: 0.3344, acc: 87.6744, loss_bbox: 0.4693, loss: 0.9577
2021-06-21 19:33:25,579 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:33:25,579 - mmdet - INFO - Epoch [1][5000/9182]	lr: 2.000e-02, eta: 7:00:53, time: 0.239, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0567, loss_rpn_bbox: 0.0944, loss_cls: 0.3244, acc: 87.9911, loss_bbox: 0.4592, loss: 0.9347
2021-06-21 19:37:25,222 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:37:25,222 - mmdet - INFO - Epoch [1][6000/9182]	lr: 2.000e-02, eta: 6:56:45, time: 0.240, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0528, loss_rpn_bbox: 0.0921, loss_cls: 0.3185, acc: 88.2229, loss_bbox: 0.4540, loss: 0.9174
2021-06-21 19:41:25,450 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:41:25,450 - mmdet - INFO - Epoch [1][7000/9182]	lr: 2.000e-02, eta: 6:52:48, time: 0.240, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0514, loss_rpn_bbox: 0.0909, loss_cls: 0.3134, acc: 88.3650, loss_bbox: 0.4465, loss: 0.9022
2021-06-21 19:45:25,322 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:45:25,322 - mmdet - INFO - Epoch [1][8000/9182]	lr: 2.000e-02, eta: 6:48:46, time: 0.240, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0510, loss_rpn_bbox: 0.0904, loss_cls: 0.3104, acc: 88.4744, loss_bbox: 0.4412, loss: 0.8930
2021-06-21 19:49:49,940 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_bdd.py
2021-06-21 19:49:49,940 - mmdet - INFO - Epoch [1][9000/9182]	lr: 2.000e-02, eta: 6:49:22, time: 0.265, data_time: 0.005, memory: 3572, loss_rpn_cls: 0.0485, loss_rpn_bbox: 0.0900, loss_cls: 0.3070, acc: 88.6320, loss_bbox: 0.4374, loss: 0.8829
2021-06-21 19:55:45,074 - mmdet - INFO - Epoch [2][1000/9182]	lr: 2.000e-02, eta: 6:46:50, time: 0.301, data_time: 0.018, memory: 3572, loss_rpn_cls: 0.0433, loss_rpn_bbox: 0.0858, loss_cls: 0.3024, acc: 88.7536, loss_bbox: 0.4340, loss: 0.8656
